<#@ template language="C#" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
namespace <#= Model.Namespace #>
{
    using <#= Model.OriginalNamespace #>;
    using Jint;
    using Jint.Native.Object;
    using System;

    partial class <#= Model.Name #>Instance : <#= Model.BaseName #>Instance
    {
        public <#= Model.Name #>Instance(Engine engine)
            : base(engine)
        {
        }

        public static <#= Model.Name #>Instance Create<#= Model.Name #>Object(Engine engine)
        {
            var obj = new <#= Model.Name #>Instance(engine);
            obj.Extensible = true;
            obj.Prototype = engine.Object.PrototypeObject;            
            return obj;
        }

        public void Configure()
        {
<# foreach (var field in Model.Fields) { #>
            FastAddProperty("<#= field.Name #>", <#= field.Value #>, false, false, false);
<# } #>
        }

        public override String Class
        {
            get { return "<#= Model.Name #>"; }
        }

        public <#= Model.OriginalName #><#= Model.GenericArguments #> Ref<#= Model.OriginalName #>
        {
            get;
            set;
        }
    }
}